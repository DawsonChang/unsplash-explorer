{"version":3,"sources":["api/unsplash.js","components/Searchbar.js","components/ImageCard.js","components/ImageList.js","components/NavBar.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","Searchbar","state","inputText","handleSubmit","event","preventDefault","props","afterSubmit","onSubmit","this","type","style","height","width","value","onChange","e","setState","target","React","Component","ImageCard","setSpans","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","gridRowEnd","ref","alt","src","regular","ImageList","images","map","id","length","className","textAlign","NavBar","Navbar","collapseOnSelect","expand","bg","variant","fixed","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","Divider","eventKey","App","a","page","per_page","unsplash","get","params","query","response","data","results","callbackLazy","entries","observer","forEach","entry","isIntersecting","unobserve","lazyRef","options","root","rootMargin","threshold","IntersectionObserver","setTimeout","observe","margin","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.da50cae9.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.unsplash.com',\n  headers: {\n    Authorization:\n      'Client-ID e6fb9c03dfc88876d5c310d9552c7184bf6e873305f0c32b0a5024c1ce36f69b',\n  }\n});","import React from 'react';\n\nclass Searchbar extends React.Component {\n    \n    state = {\n        inputText: ''\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.afterSubmit(this.state.inputText);\n    }\n\n    render() {\n        const inputStyle = {\n            height: \"25px\",\n            width: \"100%\"\n        }\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <input \n                    type=\"text\" \n                    style={ inputStyle }\n                    value={ this.state.inputText }\n                    onChange={(e) => this.setState({ inputText: e.target.value })}\n                >\n                </input>\n            </form>\n        );\n    }\n}\n\nexport default Searchbar;","import React from 'react';\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { spans: 0 };\n    // init the react ref\n    this.imageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    // 放一個 \"addEventListener\" 監聽 \"load\"\n    // 如果有任何變動，呼叫 setSpans\n    this.imageRef.current.addEventListener('load', this.setSpans);\n  }\n\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n    // ImageList.css, grid-auto-rows: 10px\n    // 這邊我們用 height / 10 看需要幾個 row，最後加 3 讓整體看起來平均一點\n    \n    // 這裡有個 bug: 在 chrome 中 grid 只能有 1000 個 rows 和 columns\n    // 因此用這種方法 infinite scroll 最多 height 只有 1000 * 10px = 10000px\n    // 目前還沒有方法解決(除非不用 grid)\n    // https://github.com/rachelandrew/gridbugs/issues/28\n    const spans = Math.ceil(height / 10) + 3;\n\n    this.setState({ spans });\n  };\n\n  render() {\n    const { description, urls } = this.props.image;\n\n    return (\n      // update css variable \"grid-row-end: span x\"\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n        <img ref={this.imageRef} alt={description} src={urls.regular} />\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n","import './ImageList.css';\nimport React from 'react';\nimport ImageCard from './ImageCard';\n\nconst ImageList = props => {\n  const images = props.images.map(image => {\n    return <ImageCard key={image.id} image={image} />;\n  });\n  if (images.length > 0) {\n    return <div className=\"image-list\">{images}</div>;\n  }\n  return <div style={{ textAlign: \"center\"}}>Please enter something to start searching...</div>\n};\n\nexport default ImageList;\n","import React from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\n\nclass NavBar extends React.Component {\n    render() {\n        return (\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\n                <Navbar.Brand href=\"#home\">Unsplash Explorer</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#features\">Features</Nav.Link>\n                    <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n                    <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                    </NavDropdown>\n                    </Nav>\n                    <Nav>\n                    <Nav.Link href=\"#deets\">More deets</Nav.Link>\n                    <Nav.Link eventKey={2} href=\"#memes\">\n                        Dank memes\n                    </Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default NavBar;","import React from 'react';\n\nimport unsplash from '../api/unsplash';\nimport Searchbar from './Searchbar';\nimport ImageList from './ImageList';\nimport NavBar from './NavBar';\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { images: [], page: 1, query: null, per_page: 10 };\n        // 新增一個 ref\n        this.lazyRef = React.createRef();\n        // options root 為 viewport 最下方的一塊 div 區域\n        const options = {\n            root: this.lazyRef.current,\n            rootMargin: \"0px\",\n            threshold: 0\n        }\n        // 新增一個 Observer\n        // 滾動到最底端的時候可以使用 lazy loading 功能\n        // 在下方 componentDidUpdate 內使用\n        this.observer = new IntersectionObserver(this.callbackLazy, options);\n      }\n\n    // 第一次搜尋後呼叫此函數\n    afterSubmit = async (inputText) => {\n        const { page, per_page } = this.state;\n        const response = await unsplash.get('/search/photos', {\n            params: { query: inputText, page, per_page }\n        });\n        this.setState({ images: response.data.results, query: inputText, page: page + 1 });\n    }\n\n    // 本體在 constructor\n    callbackLazy = (entries, observer) => {\n        entries.forEach(async entry => {\n            // 當此圖片進入 viewport 時才載入圖片\n            if (!entry.isIntersecting) return\n\n            // 每次滾動到目標時 呼叫 unsplash API, 並且 page + 1 \n            const { images, query, page, per_page } = this.state;\n            const response = await unsplash.get('/search/photos', {\n                params: { query, page, per_page }\n            });\n            this.setState({ images: [...images, ...response.data.results], page: page + 1 });\n            // 停止觀察此圖片\n            observer.unobserve(entry.target)\n          })\n    }\n\n\n    componentDidUpdate() {\n        // 只要 page 1～6頁 (共50張圖)\n        // 因此 page 超過 6 就不會再觀察 lazyRef\n        // 確保 grid row 數量不會超過 1000\n        if (this.state.page < 6) {\n            // 延遲 1 秒，讓圖片讀取完後才設置新的 Observer\n            // 因為讀取瞬間圖片還沒跑出來的時候，lazyRef 會出現在 viewport 最上方\n            // 這樣可以避免連續讀取\n            setTimeout(() => {\n                this.observer.observe(this.lazyRef.current);\n            }, 1000);\n        }\n    }\n    \n    render() {\n        const searchBarStyle = {\n            margin: \"100px auto 50px auto\",\n            width: \"60%\"\n        }\n\n        // default: 不顯示 lazyloading 區域\n        // 如果有第一筆搜尋之後才開啟 lazyloading and infinite scroll\n        const lazyLoading = (images) => {\n            if (images.length === 0) {\n                return <div></div>;\n            }\n            return <div ref={this.lazyRef}></div>;\n        };\n        \n        return (\n            <div>\n                <NavBar/>\n                <div style={ searchBarStyle }>\n                    <Searchbar afterSubmit={ this.afterSubmit }/>\n                </div>\n                <div style={{margin: \"20px auto\"}}>\n                    <ImageList images={this.state.images} />\n                </div>\n                <div>{lazyLoading(this.state.images)}</div>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />, document.querySelector('#root')\n)"],"sourceRoot":""}